{"version":3,"sources":["Components/InputContainer.jsx","Components/Rate.jsx","App.js","index.js"],"names":["InputContainer","Container","maxWidth","className","TextField","label","id","value","this","props","bynInput","onChange","func","usdInput","eurInput","rubInput","Component","Rate","usd","eur","rub","App","state","errorMessage","isLoaded","usdCur","eurCur","rubCur","fetchData","cur","bynValue","setState","Math","round","event","currentTarget","target","isNaN","tryConvert","fetch","then","response","json","data","curUsd","Cur_OfficialRate","Cur_Scale","curEur","curRub","container","handleChange","bind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5de5ed58.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nexport default class InputContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <div className=\"container-input\">\r\n          <TextField\r\n            className=\"standard-basic\"\r\n            label=\"BYN\"\r\n            id=\"byn\"\r\n            value={this.props.bynInput}\r\n            onChange={this.props.func}\r\n          />\r\n        </div>\r\n        <div className=\"container-input\">\r\n          <TextField\r\n            className=\"standard-basic\"\r\n            label=\"USD\"\r\n            id=\"usd\"\r\n            value={this.props.usdInput}\r\n            onChange={this.props.func}\r\n          />\r\n        </div>\r\n        <div className=\"container-input\">\r\n          <TextField\r\n            className=\"standard-basic\"\r\n            label=\"EUR\"\r\n            id=\"eur\"\r\n            value={this.props.eurInput}\r\n            onChange={this.props.func}\r\n          />\r\n        </div>\r\n        <div className=\"container-input\">\r\n          <TextField\r\n            className=\"standard-basic\"\r\n            label=\"RUB\"\r\n            id=\"rub\"\r\n            value={this.props.rubInput}\r\n            onChange={this.props.func}\r\n          />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Rate extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"rate-container\">\r\n        <div className=\"rate-header\">Exchange rates</div>\r\n        <div className=\"rate-value\">USD {this.props.usd}</div>\r\n        <div className=\"rate-value\">EUR {this.props.eur}</div>\r\n        <div className=\"rate-value\">RUB {this.props.rub}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Container from \"./Components/InputContainer\";\nimport Rate from \"./Components/Rate\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bynInput: \"\",\n      usdInput: \"\",\n      eurInput: \"\",\n      rubInput: \"\",\n      errorMessage: \"\",\n      isLoaded: false\n    };\n    this.usdCur = \"\";\n    this.eurCur = \"\";\n    this.rubCur = \"\";\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  tryConvert(cur, value) {\n    //сделано отдельно для каждой валюты для большей точности данных\n    let bynValue;\n    switch (cur) {\n      case \"byn\":\n        bynValue = value;\n        this.setState({\n          bynInput: value,\n          usdInput: Math.round((bynValue / this.usdCur) * 100) / 100,\n          eurInput: Math.round((bynValue / this.eurCur) * 100) / 100,\n          rubInput: Math.round((bynValue / this.rubCur) * 100) / 100,\n          errorMessage: \"\"\n        });\n        break;\n      case \"usd\":\n        bynValue = value * this.usdCur;\n        this.setState({\n          bynInput: Math.round(bynValue * 100) / 100,\n          usdInput: value,\n          eurInput: Math.round((bynValue / this.eurCur) * 100) / 100,\n          rubInput: Math.round((bynValue / this.rubCur) * 100) / 100,\n          errorMessage: \"\"\n        });\n        break;\n      case \"eur\":\n        bynValue = value * this.eurCur;\n        this.setState({\n          bynInput: Math.round(bynValue * 100) / 100,\n          usdInput: Math.round((bynValue / this.usdCur) * 100) / 100,\n          eurInput: value,\n          rubInput: Math.round((bynValue / this.rubCur) * 100) / 100,\n          errorMessage: \"\"\n        });\n        break;\n      case \"rub\":\n        bynValue = value * this.rubCur;\n        this.setState({\n          bynInput: Math.round(bynValue * 100) / 100,\n          usdInput: Math.round((bynValue / this.usdCur) * 100) / 100,\n          eurInput: Math.round((bynValue / this.eurCur) * 100) / 100,\n          rubInput: value,\n          errorMessage: \"\"\n        });\n        break;\n    }\n  }\n\n  handleChange(event) {\n    let currentTarget = event.target.id;\n    let value = event.target.value;\n\n    if (isNaN(+value)) {\n      this.setState({\n        bynInput: \"\",\n        usdInput: \"\",\n        eurInput: \"\",\n        rubInput: \"\",\n        errorMessage: \"Intered incorrect value\"\n      });\n    } else {\n      this.tryConvert(currentTarget, +value);\n    }\n  }\n\n  fetchData() {\n    const url = \"https://www.nbrb.by/API/ExRates/Rates?Periodicity=0\";\n\n    let usd, eur, rub;\n\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        let curUsd = +data[4].Cur_OfficialRate / +data[4].Cur_Scale;\n        let curEur = +data[5].Cur_OfficialRate / +data[5].Cur_Scale;\n        let curRub = +data[16].Cur_OfficialRate / +data[16].Cur_Scale;\n        usd = Math.round(curUsd * 100) / 100;\n        eur = Math.round(curEur * 100) / 100;\n        rub = Math.round(curRub * 100) / 100;\n\n        this.usdCur = usd;\n        this.eurCur = eur;\n        this.rubCur = rub;\n\n        this.setState({ isLoaded: true });\n      });\n  }\n\n  render() {\n    let container;\n\n    if (this.state.isLoaded) {\n      container = (\n        <div>\n          <Rate usd={this.usdCur} eur={this.eurCur} rub={this.rubCur} />\n          <Container\n            bynInput={this.state.bynInput}\n            usdInput={this.state.usdInput}\n            eurInput={this.state.eurInput}\n            rubInput={this.state.rubInput}\n            func={this.handleChange.bind(this)}\n          />\n        </div>\n      );\n    } else {\n      container = <div className=\"loading\">Loading...</div>;\n    }\n\n    return (\n      <div>\n        <h1>Currency converter</h1>\n        {container}\n        <div className=\"error-message\">{this.state.errorMessage}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}